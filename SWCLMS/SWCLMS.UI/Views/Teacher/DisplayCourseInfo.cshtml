@using SWCLMS.Models
@using SWCLMS.Models.Views
@model SWCLMS.UI.Models.DisplayCourseInfoModels

@{
    ViewBag.Title = "DisplayCourseInfo";
}

<h2>@Model.Course.Name</h2>
<ul class="nav nav-pills">
    <li>@Html.ActionLink("Class Schedule", "Index", "Teacher")</li>
    <li class="active">@Html.ActionLink("Information", "DisplayCourseInfo", "Teacher", new { id = Model.ClassId }, null)</li>
    <li>@Html.ActionLink("Roster", "ClassRoster", "Teacher",  new { id = Model.ClassId}, null)</li>
    <li>@Html.ActionLink("Gradebook", "GradeBookDisplay", "GradeBook", new { id = Model.ClassId }, null)</li>
</ul>
<br/>
<div class="row">
    <div class="col-sm-6">
        @using (Html.BeginForm("UpdateCourseInfo", "Teacher"))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <fieldset>
                    <legend>Information</legend>
                    @*<h4>Course</h4>*@
                    
                    @Html.ValidationSummary(true)
                    @Html.HiddenFor(model => model.Course.ClassId)
                    @Html.HiddenFor(model => model.Course.UserId)



                    <div class="form-group">
                        @Html.LabelFor(model => model.Course.Name, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Course.Name)
                            @Html.ValidationMessageFor(model => model.Course.Name)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Course.GradeLevel, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Course.GradeLevel)
                            @Html.ValidationMessageFor(model => model.Course.GradeLevel)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Course.IsArchived, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Course.IsArchived)
                            @Html.ValidationMessageFor(model => model.Course.IsArchived)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Course.Subject, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Course.Subject)
                            @Html.ValidationMessageFor(model => model.Course.Subject)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Course.StartDate, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Course.StartDate)
                            @Html.ValidationMessageFor(model => model.Course.StartDate)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Course.EndDate, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Course.EndDate)
                            @Html.ValidationMessageFor(model => model.Course.EndDate)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Course.Description, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Course.Description)
                            @Html.ValidationMessageFor(model => model.Course.Description)
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-default" />
                        </div>
                    </div>
                </fieldset>
            </div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
    </div>
    <div class="col-sm-6">
@using (Html.BeginForm())
{
    <fieldset>
        <legend>Analytics</legend>
        <div>Total Students: @Html.DisplayFor(model=>model.StudentCount.Students)</div>
        @*<div>Total Students: @Html.DisplayFor(model=>model.StudentGrades.Count)</div>*@
        <div>By Grade:</div>

        <div>A - <span>@Model.StudentGrades.Count(m=>m.CurrentGrade > .89m)</span></div>
        <div>B - <span>@Model.StudentGrades.Count(m => m.CurrentGrade >=.80m&&m.CurrentGrade<.90m)</span></div>
        <div>C - <span>@Model.StudentGrades.Count(m => m.CurrentGrade >= .70m && m.CurrentGrade < .80m)</span></div>
        <div>D - <span>@Model.StudentGrades.Count(m => m.CurrentGrade >= .60m && m.CurrentGrade < .70m)</span></div>
        <div>F - <span>@Model.StudentGrades.Count(m => m.CurrentGrade < .60m)</span></div>




        @*<div>A - @Html.Display(model=>model.StudentGrades.FindAll(n=>n>.89m))</div>*@
        @*<div>A - @Html.DisplayFor(model=>model.StudentGrades.Where(>))</div>*@
        <br />
    </fieldset>
}
    </div>

</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
